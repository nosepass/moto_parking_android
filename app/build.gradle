apply plugin: 'com.android.application'

android {
    compileSdkVersion 'Google Inc.:Google APIs:21'
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.github.nosepass.motoparking"
        minSdkVersion 17
        targetSdkVersion 21
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName "1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    File keystorePropertyFile = project.parent.file("keystore.properties")
    signingConfigs {
        Properties props = new Properties()
        if (keystorePropertyFile.exists()) {
            props.load(new FileInputStream(keystorePropertyFile))
        }
        release {
            if (keystorePropertyFile.exists()) {
                storeFile parent.file(props['storeFile'])
                storePassword props['storePassword']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }
    }
    buildTypes {
        release {
            versionNameSuffix "." + android.defaultConfig.versionCode
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "-build" + getBuildDate()
            if (keystorePropertyFile.exists()) {
                signingConfig signingConfigs.release
            } else {
                signingConfig android.defaultConfig.signingConfig
            }
        }
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    packagingOptions {
        // I can't believe this is still a problem. espresso's hamcrest-integration jar has a copy of LICENSE.txt
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/INDEX.LIST'
    }
}

dependencies {
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.9.5"

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.android.support:recyclerview-v7:22.0.0' // TODO might be removable, or might be req'd by FAB
    compile 'com.google.android.gms:play-services-base:7.0.0'
    compile 'com.google.android.gms:play-services-location:7.0.0'
    compile 'com.google.android.gms:play-services-maps:7.0.0'
    compile 'de.greenrobot:greendao:1.3.7'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.3.0'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.melnykov:floatingactionbutton:1.3.0'
    compile 'com.uservoice:uservoice-android-sdk:1.+'
    compile 'com.bugsnag:bugsnag-android:3.2.5'
    compile('de.keyboardsurfer.android.widget:crouton:1.8.5@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'
    compile 'com.facebook.stetho:stetho:1.1.0'
}

def getBuildDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}
